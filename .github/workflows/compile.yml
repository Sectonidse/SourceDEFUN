# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Game

on: [release, pull_request, workflow_dispatch]

env:
  # Configuration type to build.
  BUILD_CONFIGURATION: Debug

permissions:
  contents: read

jobs:
  Windows-make:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4

    # On Windows runners, let's ensure to have the Developer Command Prompt environment setup correctly.
    # As used here the Developer Command Prompt created is targeting x64 and using the default the Windows SDK.
    - uses: ilammy/msvc-dev-cmd@v1
    
    - name: Generate Makefile
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: cmake -S . -G "Unix Makefiles" -B .\build

    - name: Compile
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: cd .\build && make
  Windows-msbuild:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      # On Windows runners, let's ensure to have the Developer Command Prompt environment setup correctly.
      # As used here the Developer Command Prompt created is targeting x64 and using the default the Windows SDK.
      - uses: ilammy/msvc-dev-cmd@v1

      - name: Generate solution
        working-directory: ${{env.GITHUB_WORKSPACE}}
        run: cmake -S . -G "Visual Studio 17 2022" -B .\build
      
      - name: Compile
        working-directory: ${{env.GITHUB_WORKSPACE}}
        run: cd .\build && msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} SourceDEFUN.sln
  Windows-legacy:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      # On Windows runners, let's ensure to have the Developer Command Prompt environment setup correctly.
      # As used here the Developer Command Prompt created is targeting x64 and using the default the Windows SDK.
      - uses: ilammy/msvc-dev-cmd@v1

      - name: Compile
        working-directory: ${{env.GITHUB_WORKSPACE}}
        run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} SourceDEFUN.sln


  Linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Dependencies
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: |
        sudo apt remove lib32gcc-s1
        sudo add-apt-repository 'deb [trusted=yes][arch=amd64] https://archive.debian.org/debian/ lenny main'
        sudo add-apt-repository 'deb [trusted=yes][arch=amd64] https://archive.debian.org/debian/ etch main'        
        cd ./thirdparty/gcc
        sudo apt install ./cpp-4.2.4-51.deb ./g++-4.2.4-51.deb ./g++-multilib_4.2.4-51.deb ./gcc-4.2.4-51.deb ./libstdc++6-dev_4.2.4-51.deb ./gcc-base_4.2.4-51.deb ./gcc-multilib_4.2.4-51.deb lib32gcc-s1 ./lib32gcc1_4.2.4-1ubuntu3_amd64.deb
      
    - name: Prepare to build
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: |
        export CC=gcc-4.2
        export CXX=g++-4.2
        cmake -S . -B ./BUILD

    - name: Compile
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: cd ./build && make GCC=gcc-4.2
